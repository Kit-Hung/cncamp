apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: http-server-{{ $.Release.Name }}
  name: http-server-{{ $.Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-server-{{ $.Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
      labels:
        app: http-server-{{ $.Release.Name }}
    spec:
      containers:
        - image: core.harbor.domain/http-server/http_server:{{ .Values.image.tag }}
          imagePullPolicy: Always
          name: http-server
          command: ["/bin/httpServer"]
          args: ["--config", "/etc/httpServer/config.yaml"]
          volumeMounts:
            - name: http-server-config
              mountPath: /etc/httpServer
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          livenessProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: 80
          ports:
            - containerPort: 80
              name: http-metrics
              protocol: TCP
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - http-server
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: http-server-config
          configMap:
            name: http-server-config-{{ .Values.config.name }}